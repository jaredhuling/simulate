% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data_with_treatment_heterogeneity.R
\name{gen_hte_data}
\alias{gen_hte_data}
\title{Generating data with heterogeneity of treatment effect}
\usage{
gen_hte_data(n, n.test, p.contin, p.binary, family = c("gaussian"),
  p.propens.dep, p.trt.effects, p.main.effects, max.effect.size.main = 1,
  max.effect.size.trt = 1, max.effect.size.propens = 1,
  quadratic.main.effects = FALSE, trt.int.effect.ints = NULL,
  trt.int.quadratic.effects = NULL, propens.rct = FALSE, snr = 1,
  trt.frac = 0.5, rho = 0.5, bin.prob = 0.5)
}
\arguments{
\item{n}{integer sample size}

\item{n.test}{integer sample size for test dataset}

\item{p.contin}{number of continuous covariates}

\item{p.binary}{number of binary covariates}

\item{family}{type of outcome to generate. \code{"gaussian"} available}

\item{p.propens.dep}{integer number of variables that have nonzero effects in the the propensity score model}

\item{p.trt.effects}{integer number of variables that drive treatment heterogeneity}

\item{p.main.effects}{integer number of variables that have nonzero main effects for the outcome (ie number
of prognostic variables)}

\item{max.effect.size.main}{positive value for maximum magnitude of coefficients for main effects}

\item{max.effect.size.trt}{positive value for maximum magnitude of coefficients for treatment-covariate
interaction effects}

\item{max.effect.size.propens}{positive value for maximum magnitude of coefficients for propensity
score model effects}

\item{quadratic.main.effects}{logical value. Should quadratic terms be added to the covariate main
effects? These terms will not impact treatment heterogeneity}

\item{trt.int.effect.ints}{either \code{NULL} for no added interactions or a list of vectors of indices of variables. Each vector
as an element in the list will represent covariate-covariate interactions to be added to the treatment-covariate
interactions. A pairwise interaction of X_1 and X_2 here is in effect a 3-way interaction between Trt, X_1, and X_2}

\item{trt.int.quadratic.effects}{either \code{NULL} for no added quadratic terms of a vector of indices
for variables which have quadratic terms added to the covariate-treatment interactions, e.g.
\code{trt.int.quadratic.effects = c(1, 4)} will add \code{Trt:X1^2 + Trt:X4^2} to the model}

\item{propens.rct}{is the propensity model from a randomized controlled trial? If \code{TRUE}, treatments will
be assigned randomly taking value 1 with probability \code{trt.frac}}

\item{snr}{positive value for the overall signal-to-noise ratio of the model}

\item{trt.frac}{value between 0 and 1. If \code{propens.rct = TRUE}, \code{trt.frac} is the fraction of observations with trt = 1}

\item{rho}{value between 0 and 1 for correlation term in AR(1) structure of continuous covariates}

\item{bin.prob}{value between 0 and 1 for the fraction of 1's in binary covariates}
}
\description{
Generates random data with heterogeneity of treatment effect
}
\examples{

set.seed(1)
quad.eff <- c(8, 9, 10)
int.eff  <- list(c(1,2), c(3,4), c(2,3), c(4, 6), c(5,7))

data <- gen_hte_data(n = 500, n.test = 10000,
                     p.contin = 10,
                     p.binary = 5,
                     p.propens.dep = 5,
                     p.trt.effects = 4,
                     p.main.effects = 10,
                     max.effect.size.main = 1,
                     max.effect.size.trt  = 1,
                     max.effect.size.propens = 0.5,
                     quadratic.main.effects = TRUE,
                     propens.rct = FALSE,
                     trt.int.effect.ints = int.eff,
                     trt.int.quadratic.effects = quad.eff,
                     snr = 1,
                     trt.frac = 0.5,
                     rho = 0.5,
                     bin.prob = 0.25)

df <- data.frame(y = data$y,
                 trt = data$trt,
                 data$x)
form <- paste("y ~ trt*(", paste(colnames(df)[-c(1:2)], collapse = "+"), ")")
summary(lmf <- lm(as.formula(form), data = df))

df0 <- df1 <- data.frame(trt = 1, data$x.test)
df0$trt <- -1

pred1 <- predict(lmf, df1)
pred0 <- predict(lmf, df0)

est.opt.trt <- apply(cbind(pred0, pred1), 1, function(rr) c(-1,1)[which.max(rr)])

table(est.opt.trt, data$trt.test.optimal)

mean(est.opt.trt == data$trt.test.optimal)

}
